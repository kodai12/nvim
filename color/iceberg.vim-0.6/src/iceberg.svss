@template 'template.vim';
@name 'iceberg';
@maintainer 'cocopon <cocopon@me.com>';
@license 'MIT';
@background dark;


// Definitions {{{
$hue-base: 230;

$hue-red: 0;
$hue-orange: 25;
$hue-green: 70;
$hue-lblue: 190;
$hue-blue: 215;
$hue-purple: 255;

// gui
$g-blue:   hsl($hue-blue,   37%, 65%);
$g-green:  hsl($hue-green,  32%, 63%);
$g-lblue:  hsl($hue-lblue,  32%, 65%);
$g-orange: hsl($hue-orange, 65%, 68%);
$g-purple: hsl($hue-purple, 32%, 68%);
$g-red:    hsl($hue-red,    65%, 68%);

$normal-bg: hsl($hue-base, 20%, 11%);
$normal-fg: hsl($hue-base, 10%, 80%);

$linenr-bg: adjust-color($normal-bg, $saturation: +5%, $lightness: +5%);
$linenr-fg: lighten($linenr-bg, 20%);
$pmenu-bg: hsl($hue-base, 20%, 30%);
$pmenu-fg: $normal-fg;
$statusline-bg: hsl($hue-base, 9%, 55%);
$statusline-fg: hsl($hue-base, 9%, 10%);
$statuslinenc-bg: darken($normal-bg, 3%);
$statuslinenc-fg: lighten($normal-bg, 20%);

$cursorline-bg: $linenr-bg;
$folded-bg: $linenr-bg;
$folded-fg: adjust-color($folded-bg, $saturation: -5%, $lightness: +35%);

$lightline-base-bg: lighten($normal-bg, 15%);
$lightline-base-fg: adjust-color($normal-bg, $saturation: -10%, $lightness: 35%);
$lightline-edge-bg: $statusline-bg;
$lightline-edge-fg: $statusline-fg;
$lightline-gradient-bg: mix($lightline-base-bg, $lightline-edge-bg, 50%);
$lightline-gradient-fg: $lightline-edge-fg;

// cterm
$c-blue: 110;
$c-green: 150;
$c-lblue: 109;
$c-orange: 216;
$c-purple: 140;
$c-red: 203;

$c-normal-bg: 234;
$c-normal-fg: 252;
$c-linenr-bg: 235;
$c-linenr-fg: 239;
$c-pmenu-bg: 236;
$c-pmenu-fg: 251;
$c-statusline-bg: 245;
$c-statusline-fg: 234;
$c-statuslinenc-bg: 233;
$c-statuslinenc-fg: 238;

$c-cursorline-bg: $c-linenr-bg;
$c-folded-bg: $c-linenr-bg;
$c-folded-fg: 245;

$c-lightline-base-bg: 237;
$c-lightline-base-fg: 243;
$c-lightline-edge-bg: $c-statusline-bg;
$c-lightline-edge-fg: $c-statusline-fg;
$c-lightline-gradient-bg: 241;
$c-lightline-gradient-fg: $c-lightline-edge-fg;
// }}}


// Rules {{{
ColorColumn, CursorColumn, CursorLine {
	cterm: NONE;
	ctermbg: $c-cursorline-bg;
	guibg: $cursorline-bg;
}
Comment {
	ctermfg: 242;
	guifg: hsl($hue-base, 12%, 48%);
}
Constant {
	ctermfg: $c-purple;
	guifg: $g-purple;
}
Cursor {
	ctermbg: $c-normal-fg;
	ctermfg: $c-normal-bg;
	guibg: $normal-fg;
	guifg: $normal-bg;
}
CursorLineNr {
	ctermbg: 237;
	ctermfg: 253;
	guibg: adjust-color($linenr-bg,
		$saturation: +10%,
		$lightness: +10%);
	guifg: adjust-color($linenr-fg,
		$saturation: +10%, 
		$lightness: +50%);
}
Delimiter {
	ctermfg: $c-normal-fg;
	guifg: $normal-fg;
}
DiffAdd {
	ctermbg: 29;
	ctermfg: 158;
	guibg: mix($g-green, $normal-bg, 30%);
	guifg: mix($g-green, $normal-fg, 30%);
}
DiffChange {
	ctermbg: 23;
	ctermfg: 159;
	guibg: mix($g-lblue, $normal-bg, 30%);
	guifg: mix($g-lblue, $normal-fg, 30%);
}
DiffDelete {
	ctermbg: 95;
	ctermfg: 224;
	guibg: mix($g-red, $normal-bg, 30%);
	guifg: mix($g-red, $normal-fg, 30%);
}
DiffText {
	cterm: NONE;
	ctermbg: 30;
	ctermfg: 195;
	gui: NONE;
	guibg: mix($g-lblue, $normal-bg, 60%);
	guifg: $normal-fg;
}
Directory {
	ctermfg: $c-lblue;
	guifg: $g-lblue;
}
Error, ErrorMsg, WarningMsg {
	ctermbg: $c-normal-bg;
	ctermfg: $c-red;
	guibg: $normal-bg;
	guifg: $g-red;
}
EndOfBuffer, NonText, SpecialKey {
	ctermbg: $c-normal-bg;
	ctermfg: 236;
	guibg: $normal-bg;
	guifg: adjust-color($normal-bg,
		$saturation: +8%,
		$lightness: +9%);
}
Folded {
	ctermbg: $c-folded-bg;
	ctermfg: $c-folded-fg;
	guibg: $folded-bg;
	guifg: $folded-fg;
}
FoldColumn {
	ctermbg: $c-linenr-bg;
	ctermfg: $c-linenr-fg;
	guibg: $linenr-bg;
	guifg: $linenr-fg;
}
Function {
	ctermfg: $c-orange;
	guifg: $g-orange;
}
Identifier {
	cterm: NONE;
	ctermfg: $c-lblue;
	guifg: $g-lblue;
}
LineNr {
	ctermbg: $c-linenr-bg;
	ctermfg: $c-linenr-fg;
	guibg: $linenr-bg;
	guifg: $linenr-fg;
}
MatchParen {
	ctermbg: 237;
	ctermfg: 255;
	guibg: lighten($normal-bg, 20%);
	guifg: lighten($normal-fg, 50%);
}
MoreMsg {
	ctermfg: $c-green;
	guifg: $g-green;
}
Normal {
	ctermbg: $c-normal-bg;
	ctermfg: $c-normal-fg;
	guibg: $normal-bg;
	guifg: $normal-fg;
}
Operator {
	ctermfg: $c-blue;
	guifg: $g-blue;
}
Pmenu {
	ctermbg: $c-pmenu-bg;
	ctermfg: $c-pmenu-fg;
	guibg: $pmenu-bg;
	guifg: $pmenu-fg;
}
PmenuSbar {
	ctermbg: $c-pmenu-bg;
	guibg: $pmenu-bg;
}
PmenuSel {
	ctermbg: 240;
	ctermfg: 255;
	guibg: hsl($hue-base, 20%, 45%);
	guifg: hsl($hue-base, 20%, 95%);
}
PmenuThumb {
	ctermbg: $c-pmenu-fg;
	guibg: $pmenu-fg;
}
PreProc {
	ctermfg: $c-green;
	guifg: $g-green;
}
Question {
	ctermfg: $c-green;
	guifg: $g-green;
}
Search {
	ctermbg: $c-orange;
	ctermfg: $c-normal-bg;
	guibg: hsl($hue-orange, 65%, 70%);
	guifg: hsl($hue-orange, 50%, 15%);
}
SignColumn {
    ctermbg: $c-linenr-bg;
    ctermfg: $c-linenr-fg;
    guibg: $linenr-bg;
    guifg: $linenr-fg;
}
Special {
	ctermfg: $c-green;
	guifg: $g-green;
}
SpellBad {
    guisp: $g-red;
}
SpellCap {
    guisp: $g-blue;
}
SpellLocal {
    guisp: $g-lblue;
}
SpellRare {
    guisp: $g-purple;
}
Statement {
	ctermfg: $c-blue;
	gui: NONE;
	guifg: $g-blue;
}
StatusLine {
	cterm: reverse;
	ctermbg: $c-statusline-fg;
	ctermfg: $c-statusline-bg;
	gui: reverse;
	guibg: $statusline-fg;
	guifg: $statusline-bg;
	term: reverse;
}
StatusLineNC {
	cterm: reverse;
	ctermbg: $c-statuslinenc-fg;
	ctermfg: $c-statuslinenc-bg;
	gui: reverse;
	guibg: $statuslinenc-fg;
	guifg: $statuslinenc-bg;
}
StorageClass {
    ctermfg: $c-blue;
    guifg: $g-blue;
}
String {
	ctermfg: $c-lblue;
	guifg: $g-lblue;
}
Structure {
	ctermfg: $c-lblue;
	guifg: $g-lblue;
}
TabLine {
	cterm: NONE;
	ctermbg: $c-statusline-bg;
	ctermfg: $c-statusline-fg;
	gui: NONE;
	guibg: $statusline-bg;
	guifg: $statusline-fg;
}
TabLineFill {
	cterm: reverse;
	ctermbg: $c-statusline-fg;
	ctermfg: $c-statusline-bg;
	gui: reverse;
	guibg: $statusline-fg;
	guifg: $statusline-bg;
}
TabLineSel {
	cterm: NONE;
	ctermbg: $c-normal-bg;
	ctermfg: $c-normal-fg;
	gui: NONE;
	guibg: $normal-bg;
	guifg: mix($normal-fg, $normal-bg, 75%);
}
Title {
	ctermfg: $c-orange;
	gui: NONE;
	guifg: $g-orange;
}
Todo {
	ctermbg: $c-normal-bg;
	ctermfg: $c-green;
	guibg: $normal-bg;
	guifg: hsl($hue-green, 60%, 75%);
}
Type {
	ctermfg: $c-lblue;
	gui: NONE;
	guifg: $g-lblue;
}
Underlined {
	cterm: underline;
	ctermfg: $c-blue;
	gui: underline;
	guifg: $g-blue;
	term: underline;
}
VertSplit {
	ctermbg: $c-statuslinenc-bg;
	ctermfg: $c-statuslinenc-bg;
	guibg: $statuslinenc-bg;
	guifg: $statuslinenc-bg;
}
Visual {
	ctermbg: 236;
	guibg: adjust-color($normal-bg,
		$saturation: +5%,
		$lightness: +10%);
}
WildMenu {
	ctermbg: 255;
	ctermfg: $c-statusline-fg;
	guibg: lighten($statusline-bg, +30%);
	guifg: $statusline-fg;
}
ZenSpace {
	ctermbg: $c-red;
	guibg: $g-red;
}
// }}}


// Filetype-specific rules {{{
// css
@link cssBraces to Delimiter;
@link cssTagName to Statement;
// diff
diffAdded {
    ctermfg: $c-green;
    guifg: $g-green;
}
diffRemoved {
    ctermfg: $c-red;
    guifg: $g-red;
}
// help
@link helpHyperTextJump to Constant;
// html
@link htmlArg to Constant;
@link htmlEndTag to Statement;
@link htmlTag to Statement;
// javascript
@link jsArrowFunction to Operator;
@link jsFunction to Function;
@link jsGlobalObjects to Statement;
@link jsModuleDefault to Statement;
@link jsModuleKeywords to Statement;
@link jsModuleOperators to Statement;
@link jsSuper to Statement;
// json
@link jsonQuote to Normal;
// markdown
@link markdownBold to Special;
@link markdownCode to String;
@link markdownCodeDelimiter to String;
@link markdownHeadingDelimiter to Comment;
@link markdownRule to Comment;
// php
@link phpVarSelector to Identifier;
// ruby
@link rubyDefine to Statement;
@link rubyInclude to Statement;
@link rubyInterpolationDelimiter to String;
@link rubySharpBang to Comment;
@link rubyStringDelimiter to String;
// sh
@link shFunction to Normal;
// svss
@link svssBraces to Delimiter;
// swift (apple)
@link swiftIdentifier to Normal;
// vim
@link vimContinue to Comment;
@link vimIsCommand to Statement;
// xml
@link xmlAttribPunct to Statement;
@link xmlEndTag to Statement;
@link xmlNamespace to Statement;
@link xmlTag to Statement;
@link xmlTagName to Statement;
// yaml
@link yamlKeyValueDelimiter to Delimiter;
// }}}


// Palettes for statusline plugins {{{
icebergLLBase,
icebergLLTabFill {
	ctermbg: $c-lightline-base-bg;
	ctermfg: $c-lightline-base-fg;
	guibg: $lightline-base-bg;
	guifg: $lightline-base-fg;
}
icebergLLGradient {
	ctermbg: $c-lightline-gradient-bg;
	ctermfg: $c-lightline-gradient-fg;
	guibg: $lightline-gradient-bg;
	guifg: $lightline-gradient-fg;
}
icebergLLEdge,
icebergLLNormal,
icebergLLTabSel {
	ctermbg: $c-lightline-edge-bg;
	ctermfg: $c-lightline-edge-fg;
	guibg: $lightline-edge-bg;
	guifg: $lightline-edge-fg;
}
icebergLLNC {
	ctermbg: $c-statuslinenc-bg;
	ctermfg: $c-statuslinenc-fg;
	guibg: $statuslinenc-bg;
	guifg: $statuslinenc-fg;
}
icebergLLError {
	ctermbg: $c-red;
	ctermfg: $c-normal-bg;
	guibg: $g-red;
	guifg: $normal-bg;
}
icebergLLInsert {
	ctermbg: $c-blue;
	ctermfg: $c-normal-bg;
	guibg: $g-blue;
	guifg: $normal-bg;
}
icebergLLReplace,
icebergLLWarning {
	ctermbg: $c-orange;
	ctermfg: $c-normal-bg;
	guibg: $g-orange;
	guifg: $normal-bg;
}
icebergLLVisual {
	ctermbg: $c-green;
	ctermfg: $c-normal-bg;
	guibg: $g-green;
	guifg: $normal-bg;
}
icebergALAccentRed {
	ctermfg: $c-red;
	guifg: $g-red;
}
// }}}
